package IteratorPattern.Intrinsic;
/*
 * 如果一个聚集的接口没有提供修改聚集元素的方法，这样的接口就是所谓的窄接口。即本例没有提供getElement()方法
 * 聚集对象的内部结构应当对迭代子对象适当公开，以便迭代子对象能够对聚集对象进行迭代
 * 但是聚集对象并没有对外提供迭代的方法，其他对象只能通过迭代器进行迭代，而不能直接操作聚集对象，这就是黑箱聚集
 * 
 * 在Java中，迭代器作为具体聚集的内部成员，以内部类的形式存在。这样就可以访问聚集对象的内部结构。
 * 这种同时保证聚集对象的封装和迭代子功能的实现的方案叫做黑箱实现方案。
 * 由于迭代子是聚集的内部类，迭代子可以自由访问聚集的元素，所以迭代子可以自行实现迭代功能并控制对聚集元素的迭代逻辑。
 * 由于迭代子是在聚集的结构之内定义的，因此这样的迭代子又叫做内禀迭代子（Intrinsic Iterator）。
 */

/*
 * 抽象迭代器
 */
public interface Iterator {
	/**
	* 迭代方法：移动到第一个元素
	*/
	public void first();

	/**
	 * 迭代方法：移动到下一个元素
	 */
	public void next();

	/**
	* 迭代方法：是否为最后一个元素
	*/
	public boolean isDone();

	/**
	 * 迭代方法：返还当前元素
	 */
	public Object currentItem();

}
